{"version":3,"sources":["services/service.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObj","post","id","delete","put","TodoList","todolist","handleDone","handleDelete","map","x","className","done","title","onClick","SubmitForm","props","value","newTitle","onChange","handleTitleChange","handleSubmit","type","Notification","notification","string","isError","App","useState","todoList","setTodoList","setNewTitle","setNotification","useEffect","service","event","console","log","target","preventDefault","concat","setTimeout","catch","error","item","tmp","slice","index","findIndex","y","splice","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.842c97e7.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = '/api/todolist'\r\n\r\nconst getAll = () => {\r\n\r\n    const x = axios.get(baseUrl)\r\n    return x.then(response => response.data)\r\n}\r\n\r\nconst create = newObj => {\r\n    const x = axios.post(baseUrl, newObj)\r\n    return x.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    const x = axios.delete(baseUrl + \"/\" + id)\r\n    return x.then(response => response.data)\r\n}\r\n\r\nconst update = newObj => {\r\n    const x = axios.put(baseUrl + \"/\" + newObj.id, newObj)\r\n    return x.then(response => response.data)\r\n}\r\nexport default { \r\n    getAll: getAll, \r\n    create: create, \r\n    remove: remove,\r\n    update: update\r\n}\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\nimport service from './services/service.js' \nimport './App.css'\n\nconst TodoList = ({todolist, handleDone, handleDelete}) => {\n\n  return todolist.map( x => <tr key={x.id} className={x.done ? \"item_done\" : \"item_normal\"}><td>{x.title}</td><td><button onClick={handleDone(x)}>{x.done ? \"mark as undone\" : \"mark as done\"}</button></td><td><button onClick={handleDelete(x.id)}>delete</button></td></tr> )\n}\n\nconst SubmitForm = (props) => {\n\n  return (\n    <form>\n    <div>\n      <input  value={props.newTitle} onChange={props.handleTitleChange} />\n    </div>\n    <div>\n      <button onClick={props.handleSubmit} type=\"submit\">Add</button>\n    </div>\n    </form>\n  )\n}\n\nconst Notification = ({ notification }) => {\n  if (notification === null || notification.string === null) {\n    return null\n  }\n\n  return (\n    <div className={notification.isError ? \"notification_error\" : \"notification_normal\" }>\n      {notification.string}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ todoList, setTodoList] = useState([]) \n  const [ newTitle, setNewTitle ] = useState('')\n  const [ notification, setNotification] = useState({string: null, isError: false})\n\n  useEffect(() => {\n      service.getAll().then(x => setTodoList(x)) \n  }, [])\n\n  const handleTitleChange = (event) => {\n    console.log(event.target.value)\n    setNewTitle(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n    let newObj = { title: newTitle }\n    service.create(newObj)\n      .then( x => { \n        setTodoList( todoList.concat(x) ) \n        setNotification( { string:`Added new item to todo list '${newTitle}'`, isError: false} )\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000)\n        })\n      .catch(error => {\n        console.log(error.response.data)\n        setNotification( {string: error.response.data, isError: true } )\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000)\n      })\n  }\n\n  const handleDelete = (id) => () => {\n    console.log(\"delete \" + id)\n    service.remove(id).then(x => setTodoList( todoList.filter( y => y.id !== id) ))\n  }\n\n  const handleDone = (item) => () => {\n    item.done = !item.done\n    console.log(\"update \" + item)\n    service.update(item).then(  x => {\n      let tmp = todoList.slice()\n      let index = tmp.findIndex(y => y.id === x.id)\n      tmp.splice(index, 1, item)\n      setTodoList(tmp)\n    })\n  }\n\n  return (\n    <div>\n      <h2>Add new item to TODO list</h2>\n      <Notification notification={notification} />\n      <SubmitForm newTitle={newTitle} handleTitleChange={handleTitleChange} handleSubmit={handleSubmit} />\n      <br></br>\n      <h2>My TODO list</h2>\n      <table>\n        <TodoList todolist={todoList} handleDone={handleDone} handleDelete={handleDelete} />\n      </table>\n    </div>\n  )\n\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}